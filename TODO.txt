

 - To separate between the actual game and editor, create the ability to add command line arguments to differentiate between the two

 - At some point it might be nice to try and figure out how to import raymarching for ultimate pretty

 - So what if we had two windows

How does this correlate to the idea you had that you wanted to communicate?
 

 - SetWindowPosition() is a function you can use to set the window position on the monitor
 - For the interaction system you can use function pointers inside of structs and do stuff that way



Sadly, raylib does not support multiple windows in one instance
What you can do instead is create multiple executables and then create some sort of file to transfer data over from one executable to the other

system("file.exe") will run the executable, it's included in <stdlib.h>




What is our best course of action here:





Design a rule for gameb puzzle 


Figure out how to $(SolutionDir) things to make it possible for other machines to get the imported info for things like models and textures

It would also probably be nice if you made the player a little taller

Might consider separating some of the stuff in the controller, it's getting quite long



Make it more obvious when you complete a puzzle/enter into a puzzle 


At some point, you need to start using Freedom units

printf("The address of x is: %p\n", (void *)ptr);

Create ordered solutions
    - Create glaringly obvious error when player inputs buttons incorrectly




Kind of horrifically, things are not checked very well which leads to crashing when you are creating puzzles, this is probably a thing that should be fixed\

If your cursor gets stuck, meaning there is no where for it to exit one button away, reset the puzzle

Quality of life features to be added or reworked:
    - Rework the button solution sizes (some of them are too similiar to others making it difficult to discerne which is which)



- BIG TO SMALL
- COUNTER-CLOCKWISE

Remake intro to moving around since the two actions are split in two different puzzles 
Make it so you are taking the player's facing direction into affect when the player interacts
Errors only flash after first time inputting incorrect solution 

Intro to puzzles
Intro to solution to puzzles
Intro to cursor pushing


START ON GAME B

Game B stuff to do:
 - Think about the design of game b


IPC communication:
 - We are using shared memory for the game's inter-communication information
 - The main issue I see currently is figuring out how to have windows.h exist because raylib includes some but not all of it



nmake /f Makefile OUTPUT=custom_name.exe 

When it comes to the collision thing, check your timings for collision detection, you might need to call CollideAndSlide/CollideWIthWorld so that the player isn't ending
up in the floor on game start if you change the size of the ellipsoid

Create ability to remove submitted buttons from the linked list when the player un submits a submitted button

Currently there are errors:
 - Currently the game crashes if you input the puzzle incorrectly and then try to input again
 
