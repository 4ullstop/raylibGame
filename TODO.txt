

 - To separate between the actual game and editor, create the ability to add command line arguments to differentiate between the two

 - At some point it might be nice to try and figure out how to import raymarching for ultimate pretty

 - So what if we had two windows

How does this correlate to the idea you had that you wanted to communicate?
 

 - SetWindowPosition() is a function you can use to set the window position on the monitor
 - For the interaction system you can use function pointers inside of structs and do stuff that way



Sadly, raylib does not support multiple windows in one instance
What you can do instead is create multiple executables and then create some sort of file to transfer data over from one executable to the other

system("file.exe") will run the executable, it's included in <stdlib.h>




What is our best course of action here:




 Make it so when you interact, it interacts with the first thing hit rather than the last bc if you try to interact with the puzzle atm from an angle that allows the ray
 to go through another box, it will interact with that box instead of the one with the puzzle in it

Do the assignation of the button symbols after the all of the assigning of the buttons materials and such

Design a rule for a puzzle for the beginning//


Figure out how to $(SolutionDir) things to make it possible for other machines to get the imported info for things like models and textures

It would also probably be nice if you made the player a little taller

Might consider separating some of the stuff in the controller, it's getting quite long

At some point, it might be best if you turn some of the arrays of elements into linked lists, this way we are able to destroy things if need be like doors when they extend all the way

Create a system for turning on and off buttons upon the selection of a specific button in the list


Create ability for puzzles to power on other puzzles


Do what you did with the construction of puzzles with the construction of interactable boxes

Make it more obvious when you complete a puzzle/enter into a puzzle

Arrow key interaction hint does not dissappear when puzzle finished

